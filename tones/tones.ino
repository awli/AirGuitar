#include "pitches.h"
const int BUZZER = 5;
const float BEAT = 500;

void setup() {
  Serial.begin(9600);
  pinMode(BUZZER, OUTPUT);
  digitalWrite(BUZZER, HIGH);
}

void magic_johnson() {
  //measure 1
  tone(BUZZER, NOTE_AS4, BEAT * 1.5);
  delay(BEAT * 1.5);
  tone(BUZZER, NOTE_C5, BEAT * 1.5);
  delay(BEAT * 1.5);
  tone(BUZZER, NOTE_F4, BEAT);
  delay(BEAT);
  tone(BUZZER, NOTE_C5, BEAT * 1.5);
  delay(BEAT * 1.5);
  tone(BUZZER, NOTE_D5, BEAT * 1.5);
  delay(BEAT * 1.5);
  tone(BUZZER, NOTE_F5, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_DS5, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_D5, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_AS4, BEAT * 1.5);
  delay(BEAT * 1.5);
  tone(BUZZER, NOTE_C5, BEAT * 1.5);
  delay(BEAT * 1.5);
  tone(BUZZER, NOTE_F4, BEAT * 2.5);
  delay(BEAT * 2.5);
  delay(BEAT);
  tone(BUZZER, NOTE_F4, BEAT * 0.2);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_F4, BEAT * 0.2);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_G4, BEAT * 0.2);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_AS4, BEAT * 0.45);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_AS4, BEAT * 0.2);
  delay(BEAT * 0.25);
  //repeat
  tone(BUZZER, NOTE_AS4, BEAT * 1.5);
  delay(BEAT * 1.5);
  tone(BUZZER, NOTE_C5, BEAT * 1.5);
  delay(BEAT * 1.5);
  tone(BUZZER, NOTE_F4, BEAT);
  delay(BEAT);
  tone(BUZZER, NOTE_C5, BEAT * 1.5);
  delay(BEAT * 1.5);
  tone(BUZZER, NOTE_D5, BEAT * 1.5);
  delay(BEAT * 1.5);
  tone(BUZZER, NOTE_F5, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_DS5, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_D5, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_AS4, BEAT * 1.5);
  delay(BEAT * 1.5);
  tone(BUZZER, NOTE_C5, BEAT * 1.5);
  delay(BEAT * 1.5);
  tone(BUZZER, NOTE_F4, BEAT);
  delay(BEAT * 1);
  tone(BUZZER, NOTE_A4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_AS4, BEAT * 0.45);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_AS4, BEAT);
  delay(BEAT);
  tone(BUZZER, NOTE_AS4, BEAT * 0.2);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_AS4, BEAT * 0.4);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_AS4, BEAT * 0.2);
  delay(BEAT * 0.25);
  //measure 7
  delay(BEAT);
  tone(BUZZER, NOTE_G4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_A4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_AS4, BEAT * 0.45);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_AS4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_C5, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_A4, BEAT * 0.75);
  delay(BEAT * 0.75);
  tone(BUZZER, NOTE_G4, BEAT * 0.2);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_F4, BEAT * 2.5);
  delay(BEAT * 2.5);
  delay(BEAT);
  //measure 9
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_G4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_G4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_A4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_AS4, BEAT * 0.45);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_G4, BEAT);
  delay(BEAT);
  tone(BUZZER, NOTE_F4, BEAT * 0.5);
  delay(BEAT * 0.5);
  //measure 10
  tone(BUZZER, NOTE_F5, BEAT * 0.5);
  delay(BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_F5, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_C5, BEAT * 1.5);
  delay(BEAT * 1.5);
  delay(BEAT);
  //measure 11
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_G4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_G4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_A4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_AS4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_G4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_AS4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_C5, BEAT * 0.5);
  delay(BEAT * 0.5);
  //measure 12
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_A4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_G4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_F4, BEAT * 1.5);
  delay(BEAT * 1.5);
  delay(BEAT);
  //measure 13
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_G4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_G4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_A4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_AS4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_G4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_F4, BEAT);
  delay(BEAT);
  //measure 14
  tone(BUZZER, NOTE_C5, BEAT * 0.45);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_C5, BEAT * 0.45);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_C5, BEAT * 0.45);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_D5, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_C5, BEAT);
  delay(BEAT);
  delay(BEAT);
  //measure 15
  tone(BUZZER, NOTE_AS4, BEAT * 2.5);
  delay(BEAT * 2.5);
  tone(BUZZER, NOTE_C5, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_D5, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_AS4, BEAT * 0.5);
  delay(BEAT * 0.5);
  //measure 16
  tone(BUZZER, NOTE_C5, BEAT * 0.45);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_C5, BEAT * 0.45);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_C5, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_D5, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_C5, BEAT);
  delay(BEAT);
  tone(BUZZER, NOTE_F4, BEAT);
  delay(BEAT);
  //measure 17
  delay(BEAT * 2);
  tone(BUZZER, NOTE_G4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_A4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_AS4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_G4, BEAT * 0.5);
  delay(BEAT * 0.5);
  //measure 18
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_C5, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_D5, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_C5, BEAT * 1.5);
  delay(BEAT * 1.5);
  tone(BUZZER, NOTE_F4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_G4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_AS4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_G4, BEAT * 0.25);
  delay(BEAT * 0.25);
  //measure 19
  tone(BUZZER, NOTE_D5, BEAT * 0.5);
  delay(BEAT * 0.75);
  tone(BUZZER, NOTE_D5, BEAT * 0.75);
  delay(BEAT * 0.75);
  tone(BUZZER, NOTE_C5, BEAT * 1.5);
  delay(BEAT * 1.5);
  tone(BUZZER, NOTE_F4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_G4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_AS4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_G4, BEAT * 0.25);
  delay(BEAT * 0.25);
  //measure 20
  tone(BUZZER, NOTE_C5, BEAT * 0.5);
  delay(BEAT * 0.75);
  tone(BUZZER, NOTE_C5, BEAT * 0.75);
  delay(BEAT * 0.75);
  tone(BUZZER, NOTE_AS4, BEAT * 0.75);
  delay(BEAT * 0.75);
  tone(BUZZER, NOTE_A4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_G4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_F4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_G4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_AS4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_G4, BEAT * 0.2);
  delay(BEAT * 0.25);
  //measure 21
  tone(BUZZER, NOTE_B5, BEAT);
  delay(BEAT);
  tone(BUZZER, NOTE_C5, BEAT * 0.45);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_A4, BEAT * 0.75);
  delay(BEAT * 0.75);
  tone(BUZZER, NOTE_G4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_F4, BEAT * 0.95);
  delay(BEAT);
  tone(BUZZER, NOTE_F4, BEAT * 0.5);
  delay(BEAT * 0.5);
  //measure 22
  tone(BUZZER, NOTE_C5, BEAT * 0.8);
  delay(BEAT);
  tone(BUZZER, NOTE_B5, BEAT * 2);
  delay(BEAT * 2);
  tone(BUZZER, NOTE_F4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_G4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_AS4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_G4, BEAT * 0.2);
  delay(BEAT * 0.25);
  //measure 23
  tone(BUZZER, NOTE_D5, BEAT * 0.5);
  delay(BEAT * 0.75);
  tone(BUZZER, NOTE_D5, BEAT * 0.75);
  delay(BEAT * 0.75);
  tone(BUZZER, NOTE_C5, BEAT * 1.5);
  delay(BEAT * 1.5);
  tone(BUZZER, NOTE_F4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_G4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_AS4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_G4, BEAT * 0.25);
  delay(BEAT * 0.25);
  //measure 24
  tone(BUZZER, NOTE_F5, BEAT);
  delay(BEAT);
  tone(BUZZER, NOTE_A4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_AS4, BEAT * 0.75);
  delay(BEAT * 0.75);
  tone(BUZZER, NOTE_F4, BEAT * 0.2);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_G4, BEAT * 0.5);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_F4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_G4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_AS4, BEAT * 0.25);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_G4, BEAT * 0.25);
  delay(BEAT * 0.25);
  //measure 25
  tone(BUZZER, NOTE_AS4, BEAT * 0.95);
  delay(BEAT);
  tone(BUZZER, NOTE_C5, BEAT * 0.45);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_A4, BEAT * 0.7);
  delay(BEAT * 0.75);
  tone(BUZZER, NOTE_G4, BEAT * 0.2);
  delay(BEAT * 0.25);
  tone(BUZZER, NOTE_F4, BEAT * 0.9);
  delay(BEAT);
  tone(BUZZER, NOTE_F4, BEAT * 0.45);
  delay(BEAT * 0.5);
  tone(BUZZER, NOTE_C5, BEAT * 0.7);
  delay(BEAT);
  tone(BUZZER, NOTE_AS4, BEAT * 2);
  delay(BEAT * 2);
}

void loop() {
  magic_johnson();
  delay(100000);
}
